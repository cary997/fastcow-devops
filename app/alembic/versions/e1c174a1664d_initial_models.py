"""initial_models

Revision ID: e1c174a1664d
Revises: ~
Create Date: 2024-03-14 09:33:00.987337

"""

from typing import Sequence, Union
import sqlmodel.sql.sqltypes
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "e1c174a1664d"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "auth_menus",
        sa.Column("id", sa.BIGINT(), nullable=False),
        sa.Column("create_at", sa.BIGINT(), nullable=True),
        sa.Column("update_at", sa.BIGINT(), nullable=True),
        sa.Column("path", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("redirect", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("component", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("meta", sa.JSON(), nullable=True),
        sa.Column("parent", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "auth_roles",
        sa.Column("id", sa.BIGINT(), nullable=False),
        sa.Column("create_at", sa.BIGINT(), nullable=True),
        sa.Column("update_at", sa.BIGINT(), nullable=True),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("nickname", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("desc", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("role_status", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "auth_users",
        sa.Column("id", sa.BIGINT(), nullable=False),
        sa.Column("create_at", sa.BIGINT(), nullable=True),
        sa.Column("update_at", sa.BIGINT(), nullable=True),
        sa.Column("nickname", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("phone", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column(
            "user_type", sa.Enum("local", "ldap", name="usertypeenum"), nullable=True
        ),
        sa.Column("user_status", sa.Boolean(), nullable=True),
        sa.Column("totp", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("username", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("password", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("phone"),
    )
    op.create_table(
        "auth_roles_menus",
        sa.Column("auth_roles_id", sa.BIGINT(), nullable=False),
        sa.Column("auth_menus_id", sa.BIGINT(), nullable=False),
        sa.ForeignKeyConstraint(
            ["auth_menus_id"],
            ["auth_menus.id"],
        ),
        sa.ForeignKeyConstraint(
            ["auth_roles_id"],
            ["auth_roles.id"],
        ),
        sa.PrimaryKeyConstraint("auth_roles_id", "auth_menus_id"),
    )
    op.create_table(
        "auth_users_roles",
        sa.Column("auth_users_id", sa.BIGINT(), nullable=False),
        sa.Column("auth_roles_id", sa.BIGINT(), nullable=False),
        sa.ForeignKeyConstraint(
            ["auth_roles_id"],
            ["auth_roles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["auth_users_id"],
            ["auth_users.id"],
        ),
        sa.PrimaryKeyConstraint("auth_users_id", "auth_roles_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("auth_users_roles")
    op.drop_table("auth_roles_menus")
    op.drop_table("auth_users")
    op.drop_table("auth_roles")
    op.drop_table("auth_menus")
    # ### end Alembic commands ###
